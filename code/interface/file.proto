/*
文件操作服务器的子服务注册信息： /service/file_service/instance_id
服务名称：/service/file_service
实例 ID: instance_id 每个能够提供用户操作服务的子服务器唯一 ID
当服务发现的时候，通过 /service/file_service 进行服务发现，就可以发现所有的能够提供用户操作的实例信息了
*/
syntax = "proto3";
package MindbniM;
import "base.proto";
option cc_generic_services = true;
//获取单个文件的请求
message GetSingleFileReq 
{
    string request_id = 1;
    string file_id = 2;
    optional string user_id = 3;
    optional string session_id = 4;
} 
//获取单个文件的响应
message GetSingleFileRsp 
{
    string request_id = 1;
    bool success = 2;
    string errmsg = 3; 
    optional FileDownloadData file_data = 4;
} 
//获取多个文件的请求
message GetMultiFileReq 
{
    string request_id = 1;
    optional string user_id = 2;
    optional string session_id = 3;
    repeated string file_id_list = 4;
} 
//获取多个文件的响应
message GetMultiFileRsp 
{
    string request_id = 1;
    bool success = 2;
    string errmsg = 3; 
    map<string, FileDownloadData> file_data = 4;
} 
//上传单个文件的请求
message PutSingleFileReq 
{
    string request_id = 1;
    optional string user_id = 2;
    optional string session_id = 3;
    FileUploadData file_data = 4;
} 
//上传单个文件的响应
message PutSingleFileRsp 
{
    string request_id = 1;
    bool success = 2;
    string errmsg = 3;
    FileMessageInfo file_info = 4;
} 
//上传多个文件的请求
message PutMultiFileReq 
{
    string request_id = 1;
    optional string user_id = 2;
    optional string session_id = 3;
    repeated FileUploadData file_data = 4;
} 
//上传多个文件的响应
message PutMultiFileRsp 
{
    string request_id = 1;
    bool success = 2;
    string errmsg = 3; 
    repeated FileMessageInfo file_info = 4;
} 
service FileService 
{
    rpc GetSingleFile(GetSingleFileReq) returns (GetSingleFileRsp);
    rpc GetMultiFile(GetMultiFileReq) returns (GetMultiFileRsp);
    rpc PutSingleFile(PutSingleFileReq) returns (PutSingleFileRsp);
    rpc PutMultiFile(PutMultiFileReq) returns (PutMultiFileRsp);
}
